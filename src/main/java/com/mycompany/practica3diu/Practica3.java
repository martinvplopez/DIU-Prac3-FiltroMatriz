/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.practica3diu;

/**
 *
 * @author marti
 */
public class Practica3 extends javax.swing.JFrame {
    
    int rangMin,rangMax;
    int matriz[][] = new int[10][10];
    boolean rangSet;
    /*
     * Creates new form Practica3
     */
    public Practica3() {
        initComponents();
        setLocationRelativeTo(null);
        matrixArea.setEditable(false);
        errorLabel.setVisible(false);
        rangSet=false;
        System.out.println(rangoMinField.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        rangoMinField = new javax.swing.JTextField();
        rangoMaxField = new javax.swing.JTextField();
        establecerRangoBtn = new javax.swing.JButton();
        deslizante = new javax.swing.JSlider();
        errorLabel = new javax.swing.JLabel();
        minmaxLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        matrixArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rangoMinField.setToolTipText("Valor mínimo");

        rangoMaxField.setToolTipText("Valor máximo");

        establecerRangoBtn.setText("Establecer");
        establecerRangoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                establecerRangoBtnActionPerformed(evt);
            }
        });

        deslizante.setToolTipText("Valor mínimo en la matriz (no incluido)");
        deslizante.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                deslizanteStateChanged(evt);
            }
        });

        errorLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        minmaxLabel.setText("Introduce valor mínimo y máximo en la matriz");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(0, 47, Short.MAX_VALUE)
                        .addComponent(minmaxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deslizante, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(rangoMinField, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rangoMaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(establecerRangoBtn)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(minmaxLabel)
                .addGap(29, 29, 29)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rangoMinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rangoMaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(establecerRangoBtn))
                .addGap(51, 51, 51)
                .addComponent(deslizante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setText("Filtro de matriz");

        matrixArea.setColumns(20);
        matrixArea.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        matrixArea.setRows(5);
        jScrollPane1.setViewportView(matrixArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void establecerRangoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_establecerRangoBtnActionPerformed
        try{
            errorLabel.setVisible(false);
            rangMin=Integer.parseInt(rangoMinField.getText());
            rangMax=Integer.parseInt(rangoMaxField.getText());
            if(rangMin<=rangMax){
            errorLabel.setVisible(false);
            deslizante.setMaximum(rangMax);
            deslizante.setMinimum(rangMin-1);
            deslizante.setPaintLabels(true);
            deslizante.setMajorTickSpacing(1);
            deslizante.setValue(rangMin-1);
            matrixArea.setText(fill(rangMin, rangMax));
            rangSet=true;
        }
        else{
            rangSet=false;
            errorLabel.setVisible(true);
            errorLabel.setText("Valor mínimo debe ser menor o igual al máximo");
        }   
        }catch(Exception e){
            rangSet=false;
            errorLabel.setVisible(true);
            errorLabel.setText("¡Introduce ambos valores enteros!");
        }
        

        
    }//GEN-LAST:event_establecerRangoBtnActionPerformed

    private void deslizanteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_deslizanteStateChanged
        if(!rangSet){
            errorLabel.setVisible(true);
            errorLabel.setText("Antes de deslizar debes introducir los valores");
        }else{
            int valorSlider=deslizante.getValue();
            System.out.println("Deslizaste " + valorSlider);
            matrixArea.setText(actMat(valorSlider));
        }

    }//GEN-LAST:event_deslizanteStateChanged
    
    private String fill(int rangMin,int rangMax){
        errorLabel.setVisible(false);
        String matStr="";
        for(int i=0;i<10;i++){
            for(int j=0;j<10;j++){
                matriz[i][j]= rangMin + (int) (Math.random() *((rangMax-rangMin)+1));
                matStr += matriz[i][j] + " ";
            }   
            matStr+="\n";
        }
        return matStr;
    }
    private String actMat(int valorSlider){
        String matStr="";
        for(int i=0;i<10;i++){
            for(int j=0;j<10;j++){
                if(matriz[i][j]<=valorSlider){
                    matStr+=" ";
                }else{
                    matStr += matriz[i][j] + " ";
                }
            }   
            matStr+="\n";
        }
        return matStr;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider deslizante;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton establecerRangoBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea matrixArea;
    private javax.swing.JLabel minmaxLabel;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField rangoMaxField;
    private javax.swing.JTextField rangoMinField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
